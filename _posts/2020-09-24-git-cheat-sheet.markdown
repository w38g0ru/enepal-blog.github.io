---
layout: post
title:  "गिट ट्युटोरियल  - १"
date:   2020-09-24 00:00:00 +0545
---
### गिट कन्फीग

गिटलाई ईन्सटल गर्ने बित्तिकै एक पटक आफु को हो भनेर (गिटलाई) चिनाउनको लागी तल दिएको कन्फ्रीगेशन गर्नु पर्दछ । त्यस पछी युुजर परिवर्तन नहुञ्जेल वा आफु अर्कै आईडेन्टीटीले काम गर्छु नभनुञ्जेल यसलाई परिवर्तन गर्न पर्दैन । 

```
git config --global user.name “[firstname lastname]”
```
कुन युजरले गिट कमिट एड गर्छ त्यसको लग राख्नको लागी सबै भन्दा पहिले युजर एड गर्नु पर्छ । 
```
git config --global user.email “[valid-email]”
```
कुन युजरले गिट कमिट एड गर्छ त्यसको लग राख्नको लागी उसको ईमेल सेट गरिन्छ । 

> प्रो टिप्स : अब गिट चलाउनु अगि आफु कुन युजरको रुपमा चलाउन लागेको छु भनेर थाहा पाउनको लागि git config --list कमाण्डको प्रयोग गर्नु पर्दछ । दिएको भन्दा फरक परिचय लिएर आफु गिट कमिट गर्ने हो भने माथी दिए जस्तै युजर नेम / ईमेल परिवर्तन गर्नु पर्दछ । 

### गिट ईनईट

```
git init
```
गिट प्रोग्राम ईनिसलाईजेशन गर्नको लागी यो कमाण्ड प्रयोग गरिन्छ ।  जुन फोल्डरमा बसेर कामगर्ने हो त्यही फोल्डरमा पसेर गिट ईनिसियलाईज गर्नु पर्दछ । पहिलो पटक गिट ईनिसियलाईज गर्दा त्यो कमाण्डले त्यसै फोल्डर भित्र डट गिट भन्ने हिडन फोल्डर बनाउदछ  । त्यसमा फाईलको लग/कमिट हिष्ट्रीहरु सेभ भएर रहेको हुन्छ । 

> प्रो टिप्स : $ git init [project name]  यस कमाण्डले लोकल रिपोजटरी निर्माण गर्दछ । प्रोजेक्टको नाम दिएको छ भने त्यस त्यस प्रोजेक्टको नामको फोल्डर बनाएर त्यस भित्र त्यस फोल्डर भित्र गिट ईनिसियलाईज हुन्छ । यदी प्रोजेक्ट नेम दिएको छैन भने आफु जुन फोल्डर भित्र रहेको गिट कमाण्ड ईनिसियलाईज गरेको त्यही फोल्डर भित्र गिट कमाण्ड ईनिसियलाईज हुन्छ । 

```
git clone [url]
```
गिट सर्भरमा रहेको आफ्नो लोकल कम्प्युटरमा सार्नको लागी क्लोन गरिन्छ ।

### गिट एड 
सिङ्गल युजरले गिटमा गर्ने काम भनेको गिट ईनिसियलाईज गर्ने , फाईलमा काम गर्ने  त्यस फाईललाई गिटहरुको (स्टेजिङ्ग एरिया) मा एड गर्ने , स्टेजिङ्ग एरियामा रहेका फाईलहरुलाई कमिट गर्ने  र त्यसलाई रिमोट सर्भरमा फुस गर्ने गर्ने हो । 

```
git add
```
यस कमाण्डले फाईललाई स्टेजिङ्ग एरियामा लानको लागि सेलेक्ट गर्ने काम गर्दछ । स्टेजिङ्ग एरियामा फालईललाई राखे पछी मात्र कमिट गर्न सकिन्छ । 

git add -A | सबै (डिलिट गरिएका , नयाँ र मोडिफाई गरीएका सबै) फाईललाई स्टेजिङ्ग एरियामा एड हुन्छ  |
git add -u | अपडेट भएको फाईल मात्र स्टेजिङ्ग एरियामा एड हुन्छ  |
git add Documentation/\*.txt | डकुमेन्टेशन फोल्डर भित्र रहेकोस सबै .txt फाईलहरुलाई एड गर्दछ  |
git add . | .gitignore भएका बाहेक  रिपोजटरीमा भएका सबै फाईलहरुलाई एड गर्ने गर्दछ ।  |

> प्रो टिप्स : स्टेजिङ्ग एरियामा फाईल एड गरी सकेपछी त्यो एक्सनलाई अनडु गर्न परेमा git reset कमाण्डको प्रयोग गरीन्छ ।  यो सबै बुझ्नको लागी सबैभन्दा पहिले git status कमाण्ड प्रयो गर्नुस । त्यसपछी स्क्रीनमा डिस्प्ले हुने म्यासेज पढ्नुहोस ।  अब गिट एड कमाण्ड प्रयोग गर्नुहोस । अब फेरी git status कमाण्डको प्रयोग गर्नुहोस । अब git add कमाण्डको प्रयोग गर्नुहोस । फेरी git status कमाण्डको प्रयोग गर्नुहोस । अगि र अहिले स्क्रीनमा देखीएको म्यासेज गर्नुहोस । अब git reset कमाण्ड प्रयोग गर्नुहोस । अनि फेरी git status कमाण्डको प्रयोग गर्नुहोस । बाँकी कुरा आफै बुझ्नु हुनेछ ;-) 

### गिट कमिट
गिट सर्भरमा फाईल पुस हुन (पठाउन) अगाडी पहिलेको भन्दा नयाँ पठाउन लागेको फाईक के अर्थमा फरक छ भन्ने बुझाउनको लागी गिट कमिटको प्रयोग गरिन्छ । साधरणतय कुनै पनि फाईलमा जे परिवर्तन गरीएको छ त्यसको छोटो बिबरण कमिट म्यासेजमा लेख्ने गरीन्छ । यस कमाण्डले आफुले काम गर्दै गरेको रिपोजटरीको स्नापसट लिने गर्दछ । भन्नाले अनगिन्ती अपडेटहरु बिचको एउटा रिस्टोर प्वाईन्ट तयार गर्ने गर्दछ । जस्तो कि तपाईले ५ वटा कमिट पुस गर्नु भएको छ भने दोस्रो कमिट गर्नु अगाडी जे थियो त्यही अवश्थामा पुग्नको लागी कमिट म्यासेज तपाईको लागि रिफरेन्स हुने गर्दछ ।

```
git commit -m "added more info about Git commit"
```
यस कमाण्डले स्टेजिङ्ग एरियामा रहेका फाईलहरुमा परिवर्तन भएको छ र त्यो परिवर्तन ईन्भर्टेड कमा भित्र उल्लेख गरीएको छ भन्ने बुझाउछ । कमिट गरे पछी उक्त कमिटलाई एउटा रेफरेन्स आईडि प्राप्त हुन्छ । त्यही आईडिको साहायताले फाईललाई रिस्टोर गर्न सकिन्छ । 

> प्रो टिप्स : मानि लिनुस , तपाई फाईल अपडेट गर्दै सर्भरमा पुस गर्दै हुनुहुन्थ्यो । कारणबस पछिल्लो तेस्रो कमिट (पुस गर्नु अगाडी) को अवश्थामा पुग्न पर्ने (अनडु गर्न पर्ने) भयो रे  । के गर्ने ??  सिम्पल छ  - सबै भन्दा पहिले  git log कमाण्डको साहायताले सुरुमा जुन कमिट सुधार्ने हो, त्यो फेला पार्ने र त्यस कमिटको ह्यास कपी गर्ने अनि git revert लेखेर अगि कपि गरेको ह्यास पेष्ट गर्ने ।  अब फाईल पछिल्लो तेस्रो कमिट अगाडीको अवश्थामा पुग्छ । |

### गिट पुस
लोकल सर्भरमा भएका फाईलहरुलाई (कमिट सँगै) रिमोट सर्भरमा पठाउने काम गिट पुस कमाण्डले गर्दछ ।  उदारणको लागी तपाईले कुनै फाईल अपडेट गर्नु भयो अनि तपाईको गिट सर्भरमा पुस गर्नु पर्ने भयो भने त्यसलाई तपाईले कमिट गर्नु पर्छ (कमिट अगाडि स्टेजिङ्ग एरियामा फाईल एड गर्नु पर्छ ।) अनि गिट पुस कमाण्डको साहायताले सर्भरमा पुस गर्न सकिन्छ । 

```
git push
```
गिट पुस कमाण्डले रिमोट ब्रान्चलाई लोकल कमिटले (फाईल अपलोड गरेर) अपडेट गर्न काम गर्दछ ।  यो ईन्टरयाक्टीभ कमाण्ड हो । यो कमाण्ड प्रयोग गर्दा रिमोट सर्भरमा युजरको एक्सेस अथोराईज्ड छ छैन थाहा पाउन युजर नेम पासवर्ड सोध्ने गर्दछ । 

| git push -f | फोर्सले कुनै फाईल रिमोट सर्भरमा पुस गर्नु पर्दा यो कमाण्ड प्रयोग गरिन्छ ।  यो कमाण्डले एक्जिष्टीङ्ग कमिट (फाईल) लाई डिलिट गर्ने वा ओभरराईट गर्ने सम्भावना पनि उत्तिकै रहने हुना जबरर्जस्ती नगर्दा राम्रो हुन्छ ।  |
| git push -u origin [branch] | रिमोट गिट सर्भरमा फाईल पुस गर्न पर्दा यो कमाण्डको प्रयोग गरिन्छ । कुनै ब्रान्च क्रियट गरेर त्यो ब्रान्चमा फाईल फुस गर्न चाहेको भए ब्रान्च नाम लेख्दीने नत्र  git push -u origin master लेखेर गिट पुस गर्न सकिन्छ  |
| git push --all | सबै ब्रान्च (माष्टर ब्रान्च पनि वा भनौ सबै / सप्पै) फाईलहरु रिमोट सर्भरमा पुस गर्न यस कमाण्डको प्रयोग गरीन्छ । |

### गिट स्टाटस
यस कमाण्डको साहायताले आफुले काम गर्दै गरेको फोल्डर (रिपोजटरी) र स्टेजिङ्ग एरियाको बारेमा जानकारी प्राप्त हुन्छ । जस्तो कुन फाईल एड भयो । कुन फाईल ट्रयाक्ड / अनट्र्याक्ड छ  आदी । 

| git status -s | यसले स्टाटस म्यासेजलाई सर्ट फर्ममा देखाउछ । |
| git status -v | यो कमाण्डले स्टाटस म्यासेज बिस्तृतमा देखाउछ   |

> प्रो टिप्स : गिट कमाण्ड बुझ्नेको लागी जति सक्दो धेरै गिट स्टाटस कमाण्डको प्रयोग गर्नुहोस । यसले के भईरहेको छ बुझ्नलाई सहयोग गर्दछ । 


